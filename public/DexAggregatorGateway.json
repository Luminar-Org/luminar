{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "_addressResolver",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "deployerContract_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "feesData_",
          "type": "tuple",
          "internalType": "struct FeesData",
          "components": [
            {
              "name": "feePoolChain",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "feePoolToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "maxFees", "type": "uint256", "internalType": "uint256" }
          ]
        },
        {
          "name": "initialChainSlugs_",
          "type": "uint32[]",
          "internalType": "uint32[]"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addChainInstances",
      "inputs": [
        { "name": "chainSlug", "type": "uint32", "internalType": "uint32" },
        {
          "name": "instances",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addSupportedChain",
      "inputs": [
        { "name": "chainSlug", "type": "uint32", "internalType": "uint32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addressResolver",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAddressResolver"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "allContractsDeployed",
      "inputs": [
        { "name": "chainSlug_", "type": "uint32", "internalType": "uint32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "auctionHouse",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IAuctionHouse"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "chainInstances",
      "inputs": [
        { "name": "", "type": "uint32", "internalType": "uint32" },
        { "name": "", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "claimOwner",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeBatchDualDexTrades",
      "inputs": [
        {
          "name": "chainSlugs",
          "type": "uint32[]",
          "internalType": "uint32[]"
        },
        {
          "name": "routers1",
          "type": "address[]",
          "internalType": "address[]"
        },
        {
          "name": "routers2",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "tokens1", "type": "address[]", "internalType": "address[]" },
        { "name": "tokens2", "type": "address[]", "internalType": "address[]" },
        { "name": "amounts", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "executeDualDexTrade",
      "inputs": [
        { "name": "chainSlug", "type": "uint32", "internalType": "uint32" },
        { "name": "router1", "type": "address", "internalType": "address" },
        { "name": "router2", "type": "address", "internalType": "address" },
        { "name": "token1", "type": "address", "internalType": "address" },
        { "name": "token2", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "feesData",
      "inputs": [],
      "outputs": [
        { "name": "feePoolChain", "type": "uint32", "internalType": "uint32" },
        {
          "name": "feePoolToken",
          "type": "address",
          "internalType": "address"
        },
        { "name": "maxFees", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getChainInstanceCount",
      "inputs": [
        { "name": "chainSlug", "type": "uint32", "internalType": "uint32" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFeesData",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct FeesData",
          "components": [
            {
              "name": "feePoolChain",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "feePoolToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "maxFees", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isChainSupported",
      "inputs": [
        { "name": "chainSlug", "type": "uint32", "internalType": "uint32" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isReadCall",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isValidPromise",
      "inputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "nominateOwner",
      "inputs": [
        { "name": "nominee_", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "nominee",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "setFees",
      "inputs": [
        {
          "name": "feesData_",
          "type": "tuple",
          "internalType": "struct FeesData",
          "components": [
            {
              "name": "feePoolChain",
              "type": "uint32",
              "internalType": "uint32"
            },
            {
              "name": "feePoolToken",
              "type": "address",
              "internalType": "address"
            },
            { "name": "maxFees", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportedChainSlugs",
      "inputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "uint32", "internalType": "uint32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "watcherPrecompile",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract IWatcherPrecompile"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "ArbitrageExecuted",
      "inputs": [
        {
          "name": "chainSlug",
          "type": "uint32",
          "indexed": false,
          "internalType": "uint32"
        },
        {
          "name": "instance",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "router1",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "router2",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "token1",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "token2",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnerClaimed",
      "inputs": [
        {
          "name": "claimer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnerNominated",
      "inputs": [
        {
          "name": "nominee",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "FeesDataNotSet", "inputs": [] },
    { "type": "error", "name": "InvalidPromise", "inputs": [] },
    { "type": "error", "name": "OnlyNominee", "inputs": [] },
    { "type": "error", "name": "OnlyOwner", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516119f73803806119f783398101604081905261002f916102be565b600080546001600160a01b0319166001600160a01b038616179055336100548161013e565b5060005460405163b08dd08b60e01b81526001600160a01b0385811660048301529091169063b08dd08b90602401600060405180830381600087803b15801561009c57600080fd5b505af11580156100b0573d6000803e3d6000fd5b505050506100c38261019260201b60201c565b60005b81518110156101345760098282815181106100e3576100e3610380565b6020908102919091018101518254600181810185556000948552929093206008840401805463ffffffff92831660046007909616959095026101000a948502929094021990931617909155016100c6565b5050505050610396565b600680546001600160a01b0383166001600160a01b031991821681179092556007805490911690556040517ffbe19c9b601f5ee90b44c7390f3fa2319eba01762d34ee372aeafd59b25c7f8790600090a250565b80516001805460208401516001600160a01b0316640100000000026001600160c01b031990911663ffffffff9093169290921791909117905560400151600255565b80516001600160a01b03811681146101eb57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b805163ffffffff811681146101eb57600080fd5b600082601f83011261022b57600080fd5b815160206001600160401b0380831115610247576102476101f0565b8260051b604051601f19603f8301168101818110848211171561026c5761026c6101f0565b604052938452602081870181019490810192508785111561028c57600080fd5b6020870191505b848210156102b3576102a482610206565b83529183019190830190610293565b979650505050505050565b60008060008084860360c08112156102d557600080fd5b6102de866101d4565b94506102ec602087016101d4565b93506060603f198201121561030057600080fd5b50604051606081016001600160401b038082118383101715610324576103246101f0565b8160405261033460408901610206565b8352610342606089016101d4565b60208401526080880151604084015260a08801519294508083111561036657600080fd5b50506103748782880161021a565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b611652806103a56000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635b94db27116100b8578063cbaa349e1161007c578063cbaa349e14610370578063cfc8785514610383578063d1456ce514610396578063d6f14d101461039e578063ed9152c8146103b1578063f08e37c0146103b957600080fd5b80635b94db27146102af5780638da5cb5b146102c2578063b682da3e146102d3578063b690b96214610325578063c691c96a1461034857600080fd5b806320f99c0a116100ff57806320f99c0a1461023c5780633bd1adec1461024d578063467cba7b146102555780634b40ee7c14610289578063509645861461029c57600080fd5b806305a2ee2a1461013c57806305c20c821461016c578063130db2411461018957806315e6ffa6146102145780631c49a04914610229575b600080fd5b60005461014f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546101799060ff1681565b6040519015158152602001610163565b6101e36040805160608101825260008082526020820181905291810191909152506040805160608101825260015463ffffffff8116825264010000000090046001600160a01b031660208201526002549181019190915290565b60408051825163ffffffff1681526020808401516001600160a01b0316908201529181015190820152606001610163565b610227610222366004611183565b6103cc565b005b610227610237366004611296565b6104c6565b6007546001600160a01b031661014f565b610227610794565b61027b61026336600461138b565b63ffffffff166000908152600a602052604090205490565b604051908152602001610163565b61022761029736600461138b565b6107ca565b6102276102aa36600461138b565b61089a565b6102276102bd3660046113ad565b61097b565b6006546001600160a01b031661014f565b6001546002546102fb9163ffffffff8116916401000000009091046001600160a01b03169083565b6040805163ffffffff90941684526001600160a01b03909216602084015290820152606001610163565b6101796103333660046113ad565b60056020526000908152604090205460ff1681565b61035b6103563660046113ca565b6109f0565b60405163ffffffff9091168152602001610163565b61017961037e36600461138b565b610a2a565b61014f6103913660046113e3565b610a95565b61014f610acd565b6102276103ac36600461140d565b610b4a565b61014f610dca565b6102276103c7366004611484565b610e1e565b6006546001600160a01b031633146103f757604051635fc483c560e01b815260040160405180910390fd5b61040082610a2a565b6104475760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064015b60405180910390fd5b60005b81518110156104c15763ffffffff83166000908152600a60205260409020825183908390811061047c5761047c6114ed565b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b03909316929092179091550161044a565b505050565b60015463ffffffff166000036104ee57604051620bb18560ea1b815260040160405180910390fd5b6104f6610dca565b6001600160a01b031663f22cb8746040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561053057600080fd5b505af1158015610544573d6000803e3d6000fd5b505060008054604080516325b80c8d60e21b815290516001600160a01b0390921694506396e032349350600480820193929182900301818387803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b50505050845186511480156105b5575083518651145b80156105c2575082518651145b80156105cf575081518651145b80156105dc575080518651145b6106215760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f240d8cadccee8d0e640dad2e6dac2e8c6d60531b604482015260640161043e565b60005b86518110156106d9576106d1878281518110610642576106426114ed565b602002602001015187838151811061065c5761065c6114ed565b6020026020010151878481518110610676576106766114ed565b6020026020010151878581518110610690576106906114ed565b60200260200101518786815181106106aa576106aa6114ed565b60200260200101518787815181106106c4576106c46114ed565b6020026020010151610b4a565b600101610624565b506106e2610dca565b6001600160a01b0316639646a49e60016004546040518363ffffffff1660e01b8152600401610740929190825463ffffffff81168252602090811c6001600160a01b0316908201526001909201546040830152606082015260800190565b6020604051808303816000875af115801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190611503565b5061078c610e8b565b505050505050565b6007546001600160a01b031633146107bf57604051637c91ccdd60e01b815260040160405180910390fd5b6107c833610f6b565b565b60008054906101000a90046001600160a01b03166001600160a01b031663ed9152c86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f919061151c565b6001600160a01b0316336001600160a01b0316146108975760405162461bcd60e51b81526020600482015260156024820152744f6e6c79207061796c6f61642064656c697665727960581b604482015260640161043e565b50565b6006546001600160a01b031633146108c557604051635fc483c560e01b815260040160405180910390fd5b6108ce81610a2a565b1561091b5760405162461bcd60e51b815260206004820152601760248201527f436861696e20616c726561647920737570706f72746564000000000000000000604482015260640161043e565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af6008820401805460079092166004026101000a63ffffffff818102199093169390921691909102919091179055565b6006546001600160a01b031633146109a657604051635fc483c560e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2290600090a250565b60098181548110610a0057600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000805b600954811015610a8c578263ffffffff1660098281548110610a5257610a526114ed565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1603610a845750600192915050565b600101610a2e565b50600092915050565b600a6020528160005260406000208181548110610ab157600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d1456ce56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b45919061151c565b905090565b60015463ffffffff16600003610b7257604051620bb18560ea1b815260040160405180910390fd5b610b7a610dca565b6001600160a01b031663f22cb8746040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bb457600080fd5b505af1158015610bc8573d6000803e3d6000fd5b505060008054604080516325b80c8d60e21b815290516001600160a01b0390921694506396e032349350600480820193929182900301818387803b158015610c0f57600080fd5b505af1158015610c23573d6000803e3d6000fd5b50505050610c3086610a2a565b610c725760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015260640161043e565b63ffffffff86166000908152600a6020526040902054610ccd5760405162461bcd60e51b815260206004820152601660248201527527379034b739ba30b731b2b9903337b91031b430b4b760511b604482015260640161043e565b6000610cd887610fbf565b604051630354a26360e31b81526001600160a01b0388811660048301528781166024830152868116604483015285811660648301526084820185905291925090821690631aa513189060a401600060405180830381600087803b158015610d3e57600080fd5b505af1158015610d52573d6000803e3d6000fd5b50506040805163ffffffff8b1681526001600160a01b0385811660208301528a81168284015289811660608301528881166080830152871660a082015260c0810186905290517f39f7bd5735bb2693ba4136f19d63a06ba7d71d51489da7e5e4c76d29b8e6d3dd93509081900360e0019150a1506106e25b60008060009054906101000a90046001600160a01b03166001600160a01b031663ed9152c86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b21573d6000803e3d6000fd5b6006546001600160a01b03163314610e4957604051635fc483c560e01b815260040160405180910390fd5b80516001805460208401516001600160a01b0316640100000000026001600160c01b031990911663ffffffff9093169290921791909117905560400151600255565b60008060009054906101000a90046001600160a01b03166001600160a01b031663a01afb0d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610edf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f079190810190611539565b905060005b8151811015610f6757600160056000848481518110610f2d57610f2d6114ed565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610f0c565b5050565b600680546001600160a01b0383166001600160a01b031991821681179092556007805490911690556040517ffbe19c9b601f5ee90b44c7390f3fa2319eba01762d34ee372aeafd59b25c7f8790600090a250565b63ffffffff81166000908152600a60205260408120805461101b5760405162461bcd60e51b81526020600482015260166024820152754e6f20696e7374616e63657320617661696c61626c6560501b604482015260640161043e565b805460085460009161102c916115d3565b60088054919250600061103e836115f5565b9190505550818181548110611055576110556114ed565b6000918252602090912001546001600160a01b0316949350505050565b803563ffffffff8116811461108657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110ca576110ca61108b565b604052919050565b600067ffffffffffffffff8211156110ec576110ec61108b565b5060051b60200190565b6001600160a01b038116811461089757600080fd5b600082601f83011261111c57600080fd5b8135602061113161112c836110d2565b6110a1565b8083825260208201915060208460051b87010193508684111561115357600080fd5b602086015b8481101561117857803561116b816110f6565b8352918301918301611158565b509695505050505050565b6000806040838503121561119657600080fd5b61119f83611072565b9150602083013567ffffffffffffffff8111156111bb57600080fd5b6111c78582860161110b565b9150509250929050565b600082601f8301126111e257600080fd5b813560206111f261112c836110d2565b8083825260208201915060208460051b87010193508684111561121457600080fd5b602086015b848110156111785761122a81611072565b8352918301918301611219565b600082601f83011261124857600080fd5b8135602061125861112c836110d2565b8083825260208201915060208460051b87010193508684111561127a57600080fd5b602086015b84811015611178578035835291830191830161127f565b60008060008060008060c087890312156112af57600080fd5b863567ffffffffffffffff808211156112c757600080fd5b6112d38a838b016111d1565b975060208901359150808211156112e957600080fd5b6112f58a838b0161110b565b9650604089013591508082111561130b57600080fd5b6113178a838b0161110b565b9550606089013591508082111561132d57600080fd5b6113398a838b0161110b565b9450608089013591508082111561134f57600080fd5b61135b8a838b0161110b565b935060a089013591508082111561137157600080fd5b5061137e89828a01611237565b9150509295509295509295565b60006020828403121561139d57600080fd5b6113a682611072565b9392505050565b6000602082840312156113bf57600080fd5b81356113a6816110f6565b6000602082840312156113dc57600080fd5b5035919050565b600080604083850312156113f657600080fd5b6113ff83611072565b946020939093013593505050565b60008060008060008060c0878903121561142657600080fd5b61142f87611072565b9550602087013561143f816110f6565b9450604087013561144f816110f6565b9350606087013561145f816110f6565b9250608087013561146f816110f6565b8092505060a087013590509295509295509295565b60006060828403121561149657600080fd5b6040516060810181811067ffffffffffffffff821117156114b9576114b961108b565b6040526114c583611072565b815260208301356114d5816110f6565b60208201526040928301359281019290925250919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561151557600080fd5b5051919050565b60006020828403121561152e57600080fd5b81516113a6816110f6565b6000602080838503121561154c57600080fd5b825167ffffffffffffffff81111561156357600080fd5b8301601f8101851361157457600080fd5b805161158261112c826110d2565b81815260059190911b820183019083810190878311156115a157600080fd5b928401925b828410156115c85783516115b9816110f6565b825292840192908401906115a6565b979650505050505050565b6000826115f057634e487b7160e01b600052601260045260246000fd5b500690565b60006001820161161557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f10370e09f246394547a701a772bd1e8d8388c8f3a3bc0f51f8494a00cfa05ae64736f6c63430008190033",
    "sourceMap": "214:4865:35:-:0;;;798:500;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;838:15:30;:52;;-1:-1:-1;;;;;;838:52:30;-1:-1:-1;;;;;838:52:30;;;;;1005:10:35;631:19:32;1005:10:35;631:11:32;:19::i;:::-;-1:-1:-1;1027:15:35::2;::::0;:57:::2;::::0;-1:-1:-1;;;1027:57:35;;-1:-1:-1;;;;;2707:32:37;;;1027:57:35::2;::::0;::::2;2689:51:37::0;1027:15:35;;::::2;::::0;:38:::2;::::0;2662:18:37;;1027:57:35::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1094:23;1107:9;1094:12;;;:23;;:::i;:::-;1172:6;1167:125;1188:18;:25;1184:1;:29;1167:125;;;1234:19;1259:18;1278:1;1259:21;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;;1234:47;;::::2;::::0;;::::2;::::0;;-1:-1:-1;1234:47:35;;;;;;;::::2;::::0;::::2;;::::0;;::::2;::::0;;::::2;;::::0;;;;;;;::::2;;;::::0;;::::2;::::0;;;::::2;;::::0;;::::2;;::::0;;;1215:3:::2;1167:125;;;;798:500:::0;;;;214:4865;;2216:150:32;2274:6;:17;;-1:-1:-1;;;;;2274:17:32;;-1:-1:-1;;;;;;2274:17:32;;;;;;;;2301:8;:21;;;;;;;2337:22;;;;2274:6;;2337:22;2216:150;:::o;728:155:31:-;856:20;;:8;:20;;;;;;-1:-1:-1;;;;;856:20:31;;;-1:-1:-1;;;;;;856:20:31;;;;;;;;;;;;;;;;;;;;;;728:155::o;14:177:37:-;93:13;;-1:-1:-1;;;;;135:31:37;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:167;406:13;;459:10;448:22;;438:33;;428:61;;485:1;482;475:12;500:927;564:5;617:3;610:4;602:6;598:17;594:27;584:55;;635:1;632;625:12;584:55;658:13;;690:4;-1:-1:-1;;;;;743:10:37;;;740:36;;;756:18;;:::i;:::-;802:2;799:1;795:10;834:2;828:9;897:2;893:7;888:2;884;880:11;876:25;868:6;864:38;952:6;940:10;937:22;932:2;920:10;917:18;914:46;911:72;;;963:18;;:::i;:::-;999:2;992:22;1049:18;;;1095:4;1127:15;;;1123:26;;;1083:17;;;;-1:-1:-1;1161:15:37;;;1158:35;;;1189:1;1186;1179:12;1158:35;1225:4;1217:6;1213:17;1202:28;;1239:158;1255:6;1250:3;1247:15;1239:158;;;1321:33;1350:3;1321:33;:::i;:::-;1309:46;;1375:12;;;;1272;;;;1239:158;;;1415:6;500:927;-1:-1:-1;;;;;;;500:927:37:o;1432:1106::-;1580:6;1588;1596;1604;1648:9;1639:7;1635:23;1678:3;1674:2;1670:12;1667:32;;;1695:1;1692;1685:12;1667:32;1718:40;1748:9;1718:40;:::i;:::-;1708:50;;1777:49;1822:2;1811:9;1807:18;1777:49;:::i;:::-;1767:59;-1:-1:-1;1860:4:37;-1:-1:-1;;1842:16:37;;1838:27;1835:47;;;1878:1;1875;1868:12;1835:47;-1:-1:-1;1911:2:37;1905:9;1953:4;1941:17;;-1:-1:-1;;;;;2010:18:37;;;2030:22;;;2007:46;2004:72;;;2056:18;;:::i;:::-;2096:10;2092:2;2085:22;2131:48;2175:2;2164:9;2160:18;2131:48;:::i;:::-;2123:6;2116:64;2213:51;2258:4;2247:9;2243:20;2213:51;:::i;:::-;2208:2;2196:15;;2189:76;2319:3;2304:19;;2298:26;2293:2;2281:15;;2274:51;2394:3;2379:19;;2373:26;2200:6;;-1:-1:-1;2411:14:37;;;2408:34;;;2438:1;2435;2428:12;2408:34;;;2461:71;2524:7;2515:6;2504:9;2500:22;2461:71;:::i;:::-;2451:81;;;1432:1106;;;;;;;:::o;2751:127::-;2812:10;2807:3;2803:20;2800:1;2793:31;2843:4;2840:1;2833:15;2867:4;2864:1;2857:15;2751:127;214:4865:35;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80635b94db27116100b8578063cbaa349e1161007c578063cbaa349e14610370578063cfc8785514610383578063d1456ce514610396578063d6f14d101461039e578063ed9152c8146103b1578063f08e37c0146103b957600080fd5b80635b94db27146102af5780638da5cb5b146102c2578063b682da3e146102d3578063b690b96214610325578063c691c96a1461034857600080fd5b806320f99c0a116100ff57806320f99c0a1461023c5780633bd1adec1461024d578063467cba7b146102555780634b40ee7c14610289578063509645861461029c57600080fd5b806305a2ee2a1461013c57806305c20c821461016c578063130db2411461018957806315e6ffa6146102145780631c49a04914610229575b600080fd5b60005461014f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6003546101799060ff1681565b6040519015158152602001610163565b6101e36040805160608101825260008082526020820181905291810191909152506040805160608101825260015463ffffffff8116825264010000000090046001600160a01b031660208201526002549181019190915290565b60408051825163ffffffff1681526020808401516001600160a01b0316908201529181015190820152606001610163565b610227610222366004611183565b6103cc565b005b610227610237366004611296565b6104c6565b6007546001600160a01b031661014f565b610227610794565b61027b61026336600461138b565b63ffffffff166000908152600a602052604090205490565b604051908152602001610163565b61022761029736600461138b565b6107ca565b6102276102aa36600461138b565b61089a565b6102276102bd3660046113ad565b61097b565b6006546001600160a01b031661014f565b6001546002546102fb9163ffffffff8116916401000000009091046001600160a01b03169083565b6040805163ffffffff90941684526001600160a01b03909216602084015290820152606001610163565b6101796103333660046113ad565b60056020526000908152604090205460ff1681565b61035b6103563660046113ca565b6109f0565b60405163ffffffff9091168152602001610163565b61017961037e36600461138b565b610a2a565b61014f6103913660046113e3565b610a95565b61014f610acd565b6102276103ac36600461140d565b610b4a565b61014f610dca565b6102276103c7366004611484565b610e1e565b6006546001600160a01b031633146103f757604051635fc483c560e01b815260040160405180910390fd5b61040082610a2a565b6104475760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201526064015b60405180910390fd5b60005b81518110156104c15763ffffffff83166000908152600a60205260409020825183908390811061047c5761047c6114ed565b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b03909316929092179091550161044a565b505050565b60015463ffffffff166000036104ee57604051620bb18560ea1b815260040160405180910390fd5b6104f6610dca565b6001600160a01b031663f22cb8746040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561053057600080fd5b505af1158015610544573d6000803e3d6000fd5b505060008054604080516325b80c8d60e21b815290516001600160a01b0390921694506396e032349350600480820193929182900301818387803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b50505050845186511480156105b5575083518651145b80156105c2575082518651145b80156105cf575081518651145b80156105dc575080518651145b6106215760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f240d8cadccee8d0e640dad2e6dac2e8c6d60531b604482015260640161043e565b60005b86518110156106d9576106d1878281518110610642576106426114ed565b602002602001015187838151811061065c5761065c6114ed565b6020026020010151878481518110610676576106766114ed565b6020026020010151878581518110610690576106906114ed565b60200260200101518786815181106106aa576106aa6114ed565b60200260200101518787815181106106c4576106c46114ed565b6020026020010151610b4a565b600101610624565b506106e2610dca565b6001600160a01b0316639646a49e60016004546040518363ffffffff1660e01b8152600401610740929190825463ffffffff81168252602090811c6001600160a01b0316908201526001909201546040830152606082015260800190565b6020604051808303816000875af115801561075f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107839190611503565b5061078c610e8b565b505050505050565b6007546001600160a01b031633146107bf57604051637c91ccdd60e01b815260040160405180910390fd5b6107c833610f6b565b565b60008054906101000a90046001600160a01b03166001600160a01b031663ed9152c86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f919061151c565b6001600160a01b0316336001600160a01b0316146108975760405162461bcd60e51b81526020600482015260156024820152744f6e6c79207061796c6f61642064656c697665727960581b604482015260640161043e565b50565b6006546001600160a01b031633146108c557604051635fc483c560e01b815260040160405180910390fd5b6108ce81610a2a565b1561091b5760405162461bcd60e51b815260206004820152601760248201527f436861696e20616c726561647920737570706f72746564000000000000000000604482015260640161043e565b600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af6008820401805460079092166004026101000a63ffffffff818102199093169390921691909102919091179055565b6006546001600160a01b031633146109a657604051635fc483c560e01b815260040160405180910390fd5b600780546001600160a01b0319166001600160a01b0383169081179091556040517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce2290600090a250565b60098181548110610a0057600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000805b600954811015610a8c578263ffffffff1660098281548110610a5257610a526114ed565b6000918252602090912060088204015460079091166004026101000a900463ffffffff1603610a845750600192915050565b600101610a2e565b50600092915050565b600a6020528160005260406000208181548110610ab157600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663d1456ce56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b45919061151c565b905090565b60015463ffffffff16600003610b7257604051620bb18560ea1b815260040160405180910390fd5b610b7a610dca565b6001600160a01b031663f22cb8746040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bb457600080fd5b505af1158015610bc8573d6000803e3d6000fd5b505060008054604080516325b80c8d60e21b815290516001600160a01b0390921694506396e032349350600480820193929182900301818387803b158015610c0f57600080fd5b505af1158015610c23573d6000803e3d6000fd5b50505050610c3086610a2a565b610c725760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b604482015260640161043e565b63ffffffff86166000908152600a6020526040902054610ccd5760405162461bcd60e51b815260206004820152601660248201527527379034b739ba30b731b2b9903337b91031b430b4b760511b604482015260640161043e565b6000610cd887610fbf565b604051630354a26360e31b81526001600160a01b0388811660048301528781166024830152868116604483015285811660648301526084820185905291925090821690631aa513189060a401600060405180830381600087803b158015610d3e57600080fd5b505af1158015610d52573d6000803e3d6000fd5b50506040805163ffffffff8b1681526001600160a01b0385811660208301528a81168284015289811660608301528881166080830152871660a082015260c0810186905290517f39f7bd5735bb2693ba4136f19d63a06ba7d71d51489da7e5e4c76d29b8e6d3dd93509081900360e0019150a1506106e25b60008060009054906101000a90046001600160a01b03166001600160a01b031663ed9152c86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b21573d6000803e3d6000fd5b6006546001600160a01b03163314610e4957604051635fc483c560e01b815260040160405180910390fd5b80516001805460208401516001600160a01b0316640100000000026001600160c01b031990911663ffffffff9093169290921791909117905560400151600255565b60008060009054906101000a90046001600160a01b03166001600160a01b031663a01afb0d6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610edf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f079190810190611539565b905060005b8151811015610f6757600160056000848481518110610f2d57610f2d6114ed565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055600101610f0c565b5050565b600680546001600160a01b0383166001600160a01b031991821681179092556007805490911690556040517ffbe19c9b601f5ee90b44c7390f3fa2319eba01762d34ee372aeafd59b25c7f8790600090a250565b63ffffffff81166000908152600a60205260408120805461101b5760405162461bcd60e51b81526020600482015260166024820152754e6f20696e7374616e63657320617661696c61626c6560501b604482015260640161043e565b805460085460009161102c916115d3565b60088054919250600061103e836115f5565b9190505550818181548110611055576110556114ed565b6000918252602090912001546001600160a01b0316949350505050565b803563ffffffff8116811461108657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110ca576110ca61108b565b604052919050565b600067ffffffffffffffff8211156110ec576110ec61108b565b5060051b60200190565b6001600160a01b038116811461089757600080fd5b600082601f83011261111c57600080fd5b8135602061113161112c836110d2565b6110a1565b8083825260208201915060208460051b87010193508684111561115357600080fd5b602086015b8481101561117857803561116b816110f6565b8352918301918301611158565b509695505050505050565b6000806040838503121561119657600080fd5b61119f83611072565b9150602083013567ffffffffffffffff8111156111bb57600080fd5b6111c78582860161110b565b9150509250929050565b600082601f8301126111e257600080fd5b813560206111f261112c836110d2565b8083825260208201915060208460051b87010193508684111561121457600080fd5b602086015b848110156111785761122a81611072565b8352918301918301611219565b600082601f83011261124857600080fd5b8135602061125861112c836110d2565b8083825260208201915060208460051b87010193508684111561127a57600080fd5b602086015b84811015611178578035835291830191830161127f565b60008060008060008060c087890312156112af57600080fd5b863567ffffffffffffffff808211156112c757600080fd5b6112d38a838b016111d1565b975060208901359150808211156112e957600080fd5b6112f58a838b0161110b565b9650604089013591508082111561130b57600080fd5b6113178a838b0161110b565b9550606089013591508082111561132d57600080fd5b6113398a838b0161110b565b9450608089013591508082111561134f57600080fd5b61135b8a838b0161110b565b935060a089013591508082111561137157600080fd5b5061137e89828a01611237565b9150509295509295509295565b60006020828403121561139d57600080fd5b6113a682611072565b9392505050565b6000602082840312156113bf57600080fd5b81356113a6816110f6565b6000602082840312156113dc57600080fd5b5035919050565b600080604083850312156113f657600080fd5b6113ff83611072565b946020939093013593505050565b60008060008060008060c0878903121561142657600080fd5b61142f87611072565b9550602087013561143f816110f6565b9450604087013561144f816110f6565b9350606087013561145f816110f6565b9250608087013561146f816110f6565b8092505060a087013590509295509295509295565b60006060828403121561149657600080fd5b6040516060810181811067ffffffffffffffff821117156114b9576114b961108b565b6040526114c583611072565b815260208301356114d5816110f6565b60208201526040928301359281019290925250919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561151557600080fd5b5051919050565b60006020828403121561152e57600080fd5b81516113a6816110f6565b6000602080838503121561154c57600080fd5b825167ffffffffffffffff81111561156357600080fd5b8301601f8101851361157457600080fd5b805161158261112c826110d2565b81815260059190911b820183019083810190878311156115a157600080fd5b928401925b828410156115c85783516115b9816110f6565b825292840192908401906115a6565b979650505050505050565b6000826115f057634e487b7160e01b600052601260045260246000fd5b500690565b60006001820161161557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220f10370e09f246394547a701a772bd1e8d8388c8f3a3bc0f51f8494a00cfa05ae64736f6c63430008190033",
    "sourceMap": "214:4865:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;539:39:30;;;;;-1:-1:-1;;;;;539:39:30;;;;;;-1:-1:-1;;;;;204:32:37;;;186:51;;174:2;159:18;539:39:30;;;;;;;;495:31:20;;;;;;;;;;;;413:14:37;;406:22;388:41;;376:2;361:18;495:31:20;248:187:37;1118:93:31;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;1189:15:31;;;;;;;;1196:8;1189:15;;;;;;;;;-1:-1:-1;;;;;1189:15:31;;;;;;;;;;;;;;;1118:93;;;;;662:13:37;;677:10;658:30;640:49;;749:4;737:17;;;731:24;-1:-1:-1;;;;;727:50:37;705:20;;;698:80;822:17;;;816:24;794:20;;;787:54;628:2;613:18;1118:93:31;440:407:37;1483:312:35;;;;;;:::i;:::-;;:::i;:::-;;2840:893;;;;;;:::i;:::-;;:::i;1149:83:32:-;1217:8;;-1:-1:-1;;;;;1217:8:32;1149:83;;1931:129;;;:::i;4520:151:35:-;;;;;;:::i;:::-;4632:25;;4606:7;4632:25;;;:14;:25;;;;;:32;;4520:151;;;;6327:25:37;;;6315:2;6300:18;4520:151:35;6181:177:37;3617:102:20;;;;;;:::i;:::-;;:::i;4887:190:35:-;;;;;;:::i;:::-;;:::i;1460:179:32:-;;;;;;:::i;:::-;;:::i;977:79::-;1043:6;;-1:-1:-1;;;;;1043:6:32;977:79;;435:24:31;;;;;;;;;;;;;;;-1:-1:-1;;;;;435:24:31;;;;;;;;6845:10:37;6833:23;;;6815:42;;-1:-1:-1;;;;;6893:32:37;;;6888:2;6873:18;;6866:60;6942:18;;;6935:34;6803:2;6788:18;435:24:31;6615:360:37;562:46:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;426:35:35;;;;;;:::i;:::-;;:::i;:::-;;;7339:10:37;7327:23;;;7309:42;;7297:2;7282:18;426:35:35;7165:192:37;4210:240:35;;;;;;:::i;:::-;;:::i;531:50::-;;;;;;:::i;:::-;;:::i;2166:149:30:-;;;:::i;1888:864:35:-;;;;;;:::i;:::-;;:::i;1804:129:30:-;;;:::i;4731:98:35:-;;;;;;:::i;:::-;;:::i;1483:312::-;856:6:32;;-1:-1:-1;;;;;856:6:32;842:10;:20;838:44;;871:11;;-1:-1:-1;;;871:11:32;;;;;;;;;;;838:44;1615:27:35::1;1632:9;1615:16;:27::i;:::-;1607:59;;;::::0;-1:-1:-1;;;1607:59:35;;9755:2:37;1607:59:35::1;::::0;::::1;9737:21:37::0;9794:2;9774:18;;;9767:30;-1:-1:-1;;;9813:18:37;;;9806:49;9872:18;;1607:59:35::1;;;;;;;;;1681:6;1676:113;1697:9;:16;1693:1;:20;1676:113;;;1734:25;::::0;::::1;;::::0;;;:14:::1;:25;::::0;;;;1765:12;;:9;;1775:1;;1765:12;::::1;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;1734:44;;::::1;::::0;;::::1;::::0;;-1:-1:-1;1734:44:35;;;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;1734:44:35::1;-1:-1:-1::0;;;;;1734:44:35;;::::1;::::0;;;::::1;::::0;;;1715:3:::1;1676:113;;;;1483:312:::0;;:::o;2840:893::-;753:8:20;:21;;;;:26;749:55;;788:16;;-1:-1:-1;;;788:16:20;;;;;;;;;;;749:55;814:14;:12;:14::i;:::-;-1:-1:-1;;;;;814:25:20;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;851:15:20;;;:31;;;-1:-1:-1;;;851:31:20;;;;-1:-1:-1;;;;;851:15:20;;;;-1:-1:-1;851:29:20;;-1:-1:-1;851:31:20;;;;;:15;:31;;;;;;:15;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3156:8:35::1;:15;3135:10;:17;:36;:92;;;;;3212:8;:15;3191:10;:17;:36;3135:92;:147;;;;;3268:7;:14;3247:10;:17;:35;3135:147;:202;;;;;3323:7;:14;3302:10;:17;:35;3135:202;:257;;;;;3378:7;:14;3357:10;:17;:35;3135:257;3114:326;;;::::0;-1:-1:-1;;;3114:326:35;;10235:2:37;3114:326:35::1;::::0;::::1;10217:21:37::0;10274:2;10254:18;;;10247:30;-1:-1:-1;;;10293:18:37;;;10286:52;10355:18;;3114:326:35::1;10033:346:37::0;3114:326:35::1;3456:6;3451:276;3472:10;:17;3468:1;:21;3451:276;;;3510:206;3547:10;3558:1;3547:13;;;;;;;;:::i;:::-;;;;;;;3578:8;3587:1;3578:11;;;;;;;;:::i;:::-;;;;;;;3607:8;3616:1;3607:11;;;;;;;;:::i;:::-;;;;;;;3636:7;3644:1;3636:10;;;;;;;;:::i;:::-;;;;;;;3664:7;3672:1;3664:10;;;;;;;;:::i;:::-;;;;;;;3692:7;3700:1;3692:10;;;;;;;;:::i;:::-;;;;;;;3510:19;:206::i;:::-;3491:3;;3451:276;;;;903:14:20::0;:12;:14::i;:::-;-1:-1:-1;;;;;903:20:20;;924:8;934:16;;903:48;;;;;;;;;;;;;;;10627:13:37;;10682:10;10667:26;;10649:45;;10738:2;10734:18;;;-1:-1:-1;;;;;10730:44:37;10710:18;;;10703:72;10771:1;10819:17;;;10813:24;10806:4;10791:20;;10784:54;10869:2;10854:18;;10847:34;10597:3;10582:19;;10384:503;903:48:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;961:20;:18;:20::i;:::-;2840:893:35;;;;;;:::o;1931:129:32:-;1990:8;;-1:-1:-1;;;;;1990:8:32;1976:10;:22;1972:48;;2007:13;;-1:-1:-1;;;2007:13:32;;;;;;;;;;;1972:48;2030:23;2042:10;2030:11;:23::i;:::-;1931:129::o;3617:102:20:-;1135:15:30;;;;;;;;-1:-1:-1;;;;;1135:15:30;-1:-1:-1;;;;;1135:28:30;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1121:44:30;:10;-1:-1:-1;;;;;1121:44:30;;1100:112;;;;-1:-1:-1;;;1100:112:30;;11539:2:37;1100:112:30;;;11521:21:37;11578:2;11558:18;;;11551:30;-1:-1:-1;;;11597:18:37;;;11590:51;11658:18;;1100:112:30;11337:345:37;1100:112:30;3617:102:20;:::o;4887:190:35:-;856:6:32;;-1:-1:-1;;;;;856:6:32;842:10;:20;838:44;;871:11;;-1:-1:-1;;;871:11:32;;;;;;;;;;;838:44;4970:27:35::1;4987:9;4970:16;:27::i;:::-;4969:28;4961:64;;;::::0;-1:-1:-1;;;4961:64:35;;11889:2:37;4961:64:35::1;::::0;::::1;11871:21:37::0;11928:2;11908:18;;;11901:30;11967:25;11947:18;;;11940:53;12010:18;;4961:64:35::1;11687:347:37::0;4961:64:35::1;5035:19;:35:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5035:35:35;;;;;::::1;::::0;::::1;;::::0;;;;;;::::1;;;;;::::0;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;4887:190::o;1460:179:32:-;1538:6;;-1:-1:-1;;;;;1538:6:32;1524:10;:20;1520:44;;1553:11;;-1:-1:-1;;;1553:11:32;;;;;;;;;;;1520:44;1574:8;:19;;-1:-1:-1;;;;;;1574:19:32;-1:-1:-1;;;;;1574:19:32;;;;;;;;1608:24;;;;-1:-1:-1;;1608:24:32;1460:179;:::o;426:35:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4210:240::-;4275:4;;4291:131;4312:19;:26;4308:30;;4291:131;;;4389:9;4363:35;;:19;4383:1;4363:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:35;4359:52;;-1:-1:-1;4407:4:35;;4210:240;-1:-1:-1;;4210:240:35:o;4359:52::-;4340:3;;4291:131;;;-1:-1:-1;4438:5:35;;4210:240;-1:-1:-1;;4210:240:35:o;531:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;531:50:35;;-1:-1:-1;531:50:35;;-1:-1:-1;531:50:35:o;2166:149:30:-;2216:18;2272:15;;;;;;;;;-1:-1:-1;;;;;2272:15:30;-1:-1:-1;;;;;2272:33:30;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2246:62;;2166:149;:::o;1888:864:35:-;753:8:20;:21;;;;:26;749:55;;788:16;;-1:-1:-1;;;788:16:20;;;;;;;;;;;749:55;814:14;:12;:14::i;:::-;-1:-1:-1;;;;;814:25:20;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;851:15:20;;;:31;;;-1:-1:-1;;;851:31:20;;;;-1:-1:-1;;;;;851:15:20;;;;-1:-1:-1;851:29:20;;-1:-1:-1;851:31:20;;;;;:15;:31;;;;;;:15;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:27:35::1;2119:9;2102:16;:27::i;:::-;2094:59;;;::::0;-1:-1:-1;;;2094:59:35;;9755:2:37;2094:59:35::1;::::0;::::1;9737:21:37::0;9794:2;9774:18;;;9767:30;-1:-1:-1;;;9813:18:37;;;9806:49;9872:18;;2094:59:35::1;9553:343:37::0;2094:59:35::1;2171:25;::::0;::::1;2206:1;2171:25:::0;;;:14:::1;:25;::::0;;;;:32;2163:71:::1;;;::::0;-1:-1:-1;;;2163:71:35;;12525:2:37;2163:71:35::1;::::0;::::1;12507:21:37::0;12564:2;12544:18;;;12537:30;-1:-1:-1;;;12583:18:37;;;12576:52;12645:18;;2163:71:35::1;12323:346:37::0;2163:71:35::1;2292:16;2311:26;2327:9;2311:15;:26::i;:::-;2398:157;::::0;-1:-1:-1;;;2398:157:35;;-1:-1:-1;;;;;12989:15:37;;;2398:157:35::1;::::0;::::1;12971:34:37::0;13041:15;;;13021:18;;;13014:43;13093:15;;;13073:18;;;13066:43;13145:15;;;13125:18;;;13118:43;13177:19;;;13170:35;;;2292:45:35;;-1:-1:-1;2398:45:35;;::::1;::::0;::::1;::::0;12905:19:37;;2398:157:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2571:174:35::1;::::0;;13559:10:37;13547:23;;13529:42;;-1:-1:-1;;;;;13645:15:37;;;13640:2;13625:18;;13618:43;13697:15;;;13677:18;;;13670:43;13749:15;;;13744:2;13729:18;;13722:43;13802:15;;;13796:3;13781:19;;13774:44;13855:15;;13598:3;13834:19;;13827:44;13902:3;13887:19;;13880:35;;;2571:174:35;;::::1;::::0;-1:-1:-1;2571:174:35;;;;13516:3:37;2571:174:35;;-1:-1:-1;2571:174:35::1;2084:668;903:14:20::0;1804:129:30;1849:13;1895:15;;;;;;;;;-1:-1:-1;;;;;1895:15:30;-1:-1:-1;;;;;1895:28:30;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4731:98:35;856:6:32;;-1:-1:-1;;;;;856:6:32;842:10;:20;838:44;;871:11;;-1:-1:-1;;;871:11:32;;;;;;;;;;;838:44;4802:20:35;;:8:::1;:20:::0;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;4802:20:35::1;::::0;::::1;-1:-1:-1::0;;;;;;4802:20:35;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;;::::1;;::::0;;;4731:98::o;2345:227:20:-;2394:25;2422:15;;;;;;;;;-1:-1:-1;;;;;2422:15:20;-1:-1:-1;;;;;2422:27:20;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2422:29:20;;;;;;;;;;;;:::i;:::-;2394:57;;2466:9;2461:105;2485:8;:15;2481:1;:19;2461:105;;;2551:4;2521:14;:27;2536:8;2545:1;2536:11;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2521:27:20;;;;;;;;;;;-1:-1:-1;2521:27:20;:34;;-1:-1:-1;;2521:34:20;;;;;;;;;;-1:-1:-1;2502:3:20;2461:105;;;;2384:188;2345:227::o;2216:150:32:-;2274:6;:17;;-1:-1:-1;;;;;2274:17:32;;-1:-1:-1;;;;;;2274:17:32;;;;;;;;2301:8;:21;;;;;;;2337:22;;;;2274:6;;2337:22;2216:150;:::o;3807:339:35:-;3917:25;;;3868:7;3917:25;;;:14;:25;;;;;3960:16;;3952:55;;;;-1:-1:-1;;;3952:55:35;;15089:2:37;3952:55:35;;;15071:21:37;15128:2;15108:18;;;15101:30;-1:-1:-1;;;15147:18:37;;;15140:52;15209:18;;3952:55:35;14887:346:37;3952:55:35;4057:16;;4034:20;;4018:13;;4034:39;;;:::i;:::-;4083:20;:22;;4018:55;;-1:-1:-1;4083:20:35;:22;;;:::i;:::-;;;;;;4123:9;4133:5;4123:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4123:16:35;;3807:339;-1:-1:-1;;;;3807:339:35:o;852:163:37:-;919:20;;979:10;968:22;;958:33;;948:61;;1005:1;1002;995:12;948:61;852:163;;;:::o;1020:127::-;1081:10;1076:3;1072:20;1069:1;1062:31;1112:4;1109:1;1102:15;1136:4;1133:1;1126:15;1152:275;1223:2;1217:9;1288:2;1269:13;;-1:-1:-1;;1265:27:37;1253:40;;1323:18;1308:34;;1344:22;;;1305:62;1302:88;;;1370:18;;:::i;:::-;1406:2;1399:22;1152:275;;-1:-1:-1;1152:275:37:o;1432:183::-;1492:4;1525:18;1517:6;1514:30;1511:56;;;1547:18;;:::i;:::-;-1:-1:-1;1592:1:37;1588:14;1604:4;1584:25;;1432:183::o;1620:131::-;-1:-1:-1;;;;;1695:31:37;;1685:42;;1675:70;;1741:1;1738;1731:12;1756:743;1810:5;1863:3;1856:4;1848:6;1844:17;1840:27;1830:55;;1881:1;1878;1871:12;1830:55;1917:6;1904:20;1943:4;1967:60;1983:43;2023:2;1983:43;:::i;:::-;1967:60;:::i;:::-;2049:3;2073:2;2068:3;2061:15;2101:4;2096:3;2092:14;2085:21;;2158:4;2152:2;2149:1;2145:10;2137:6;2133:23;2129:34;2115:48;;2186:3;2178:6;2175:15;2172:35;;;2203:1;2200;2193:12;2172:35;2239:4;2231:6;2227:17;2253:217;2269:6;2264:3;2261:15;2253:217;;;2349:3;2336:17;2366:31;2391:5;2366:31;:::i;:::-;2410:18;;2448:12;;;;2286;;2253:217;;;-1:-1:-1;2488:5:37;1756:743;-1:-1:-1;;;;;;1756:743:37:o;2504:420::-;2596:6;2604;2657:2;2645:9;2636:7;2632:23;2628:32;2625:52;;;2673:1;2670;2663:12;2625:52;2696:28;2714:9;2696:28;:::i;:::-;2686:38;;2775:2;2764:9;2760:18;2747:32;2802:18;2794:6;2791:30;2788:50;;;2834:1;2831;2824:12;2788:50;2857:61;2910:7;2901:6;2890:9;2886:22;2857:61;:::i;:::-;2847:71;;;2504:420;;;;;:::o;2929:672::-;2982:5;3035:3;3028:4;3020:6;3016:17;3012:27;3002:55;;3053:1;3050;3043:12;3002:55;3089:6;3076:20;3115:4;3139:60;3155:43;3195:2;3155:43;:::i;3139:60::-;3221:3;3245:2;3240:3;3233:15;3273:4;3268:3;3264:14;3257:21;;3330:4;3324:2;3321:1;3317:10;3309:6;3305:23;3301:34;3287:48;;3358:3;3350:6;3347:15;3344:35;;;3375:1;3372;3365:12;3344:35;3411:4;3403:6;3399:17;3425:147;3441:6;3436:3;3433:15;3425:147;;;3507:22;3525:3;3507:22;:::i;:::-;3495:35;;3550:12;;;;3458;;3425:147;;3606:668;3660:5;3713:3;3706:4;3698:6;3694:17;3690:27;3680:55;;3731:1;3728;3721:12;3680:55;3767:6;3754:20;3793:4;3817:60;3833:43;3873:2;3833:43;:::i;3817:60::-;3899:3;3923:2;3918:3;3911:15;3951:4;3946:3;3942:14;3935:21;;4008:4;4002:2;3999:1;3995:10;3987:6;3983:23;3979:34;3965:48;;4036:3;4028:6;4025:15;4022:35;;;4053:1;4050;4043:12;4022:35;4089:4;4081:6;4077:17;4103:142;4119:6;4114:3;4111:15;4103:142;;;4185:17;;4173:30;;4223:12;;;;4136;;4103:142;;4279:1500;4532:6;4540;4548;4556;4564;4572;4625:3;4613:9;4604:7;4600:23;4596:33;4593:53;;;4642:1;4639;4632:12;4593:53;4682:9;4669:23;4711:18;4752:2;4744:6;4741:14;4738:34;;;4768:1;4765;4758:12;4738:34;4791:60;4843:7;4834:6;4823:9;4819:22;4791:60;:::i;:::-;4781:70;;4904:2;4893:9;4889:18;4876:32;4860:48;;4933:2;4923:8;4920:16;4917:36;;;4949:1;4946;4939:12;4917:36;4972:63;5027:7;5016:8;5005:9;5001:24;4972:63;:::i;:::-;4962:73;;5088:2;5077:9;5073:18;5060:32;5044:48;;5117:2;5107:8;5104:16;5101:36;;;5133:1;5130;5123:12;5101:36;5156:63;5211:7;5200:8;5189:9;5185:24;5156:63;:::i;:::-;5146:73;;5272:2;5261:9;5257:18;5244:32;5228:48;;5301:2;5291:8;5288:16;5285:36;;;5317:1;5314;5307:12;5285:36;5340:63;5395:7;5384:8;5373:9;5369:24;5340:63;:::i;:::-;5330:73;;5456:3;5445:9;5441:19;5428:33;5412:49;;5486:2;5476:8;5473:16;5470:36;;;5502:1;5499;5492:12;5470:36;5525:63;5580:7;5569:8;5558:9;5554:24;5525:63;:::i;:::-;5515:73;;5641:3;5630:9;5626:19;5613:33;5597:49;;5671:2;5661:8;5658:16;5655:36;;;5687:1;5684;5677:12;5655:36;;5710:63;5765:7;5754:8;5743:9;5739:24;5710:63;:::i;:::-;5700:73;;;4279:1500;;;;;;;;:::o;5992:184::-;6050:6;6103:2;6091:9;6082:7;6078:23;6074:32;6071:52;;;6119:1;6116;6109:12;6071:52;6142:28;6160:9;6142:28;:::i;:::-;6132:38;5992:184;-1:-1:-1;;;5992:184:37:o;6363:247::-;6422:6;6475:2;6463:9;6454:7;6450:23;6446:32;6443:52;;;6491:1;6488;6481:12;6443:52;6530:9;6517:23;6549:31;6574:5;6549:31;:::i;6980:180::-;7039:6;7092:2;7080:9;7071:7;7067:23;7063:32;7060:52;;;7108:1;7105;7098:12;7060:52;-1:-1:-1;7131:23:37;;6980:180;-1:-1:-1;6980:180:37:o;7362:252::-;7429:6;7437;7490:2;7478:9;7469:7;7465:23;7461:32;7458:52;;;7506:1;7503;7496:12;7458:52;7529:28;7547:9;7529:28;:::i;:::-;7519:38;7604:2;7589:18;;;;7576:32;;-1:-1:-1;;;7362:252:37:o;7855:813::-;7958:6;7966;7974;7982;7990;7998;8051:3;8039:9;8030:7;8026:23;8022:33;8019:53;;;8068:1;8065;8058:12;8019:53;8091:28;8109:9;8091:28;:::i;:::-;8081:38;;8169:2;8158:9;8154:18;8141:32;8182:31;8207:5;8182:31;:::i;:::-;8232:5;-1:-1:-1;8289:2:37;8274:18;;8261:32;8302:33;8261:32;8302:33;:::i;:::-;8354:7;-1:-1:-1;8413:2:37;8398:18;;8385:32;8426:33;8385:32;8426:33;:::i;:::-;8478:7;-1:-1:-1;8537:3:37;8522:19;;8509:33;8551;8509;8551;:::i;:::-;8603:7;8593:17;;;8657:3;8646:9;8642:19;8629:33;8619:43;;7855:813;;;;;;;;:::o;8904:644::-;8990:6;9043:2;9031:9;9022:7;9018:23;9014:32;9011:52;;;9059:1;9056;9049:12;9011:52;9092:2;9086:9;9134:2;9126:6;9122:15;9203:6;9191:10;9188:22;9167:18;9155:10;9152:34;9149:62;9146:88;;;9214:18;;:::i;:::-;9250:2;9243:22;9289:28;9307:9;9289:28;:::i;:::-;9281:6;9274:44;9368:2;9357:9;9353:18;9340:32;9381:31;9406:5;9381:31;:::i;:::-;9440:2;9428:15;;9421:30;9512:2;9497:18;;;9484:32;9467:15;;;9460:57;;;;-1:-1:-1;9432:6:37;8904:644;-1:-1:-1;8904:644:37:o;9901:127::-;9962:10;9957:3;9953:20;9950:1;9943:31;9993:4;9990:1;9983:15;10017:4;10014:1;10007:15;10892:184;10962:6;11015:2;11003:9;10994:7;10990:23;10986:32;10983:52;;;11031:1;11028;11021:12;10983:52;-1:-1:-1;11054:16:37;;10892:184;-1:-1:-1;10892:184:37:o;11081:251::-;11151:6;11204:2;11192:9;11183:7;11179:23;11175:32;11172:52;;;11220:1;11217;11210:12;11172:52;11252:9;11246:16;11271:31;11296:5;11271:31;:::i;13926:956::-;14021:6;14052:2;14095;14083:9;14074:7;14070:23;14066:32;14063:52;;;14111:1;14108;14101:12;14063:52;14144:9;14138:16;14177:18;14169:6;14166:30;14163:50;;;14209:1;14206;14199:12;14163:50;14232:22;;14285:4;14277:13;;14273:27;-1:-1:-1;14263:55:37;;14314:1;14311;14304:12;14263:55;14343:2;14337:9;14366:60;14382:43;14422:2;14382:43;:::i;14366:60::-;14460:15;;;14542:1;14538:10;;;;14530:19;;14526:28;;;14491:12;;;;14566:19;;;14563:39;;;14598:1;14595;14588:12;14563:39;14622:11;;;;14642:210;14658:6;14653:3;14650:15;14642:210;;;14731:3;14725:10;14748:31;14773:5;14748:31;:::i;:::-;14792:18;;14675:12;;;;14830;;;;14642:210;;;14871:5;13926:956;-1:-1:-1;;;;;;;13926:956:37:o;15238:209::-;15270:1;15296;15286:132;;15340:10;15335:3;15331:20;15328:1;15321:31;15375:4;15372:1;15365:15;15403:4;15400:1;15393:15;15286:132;-1:-1:-1;15432:9:37;;15238:209::o;15452:232::-;15491:3;15512:17;;;15509:140;;15571:10;15566:3;15562:20;15559:1;15552:31;15606:4;15603:1;15596:15;15634:4;15631:1;15624:15;15509:140;-1:-1:-1;15676:1:37;15665:13;;15452:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addChainInstances(uint32,address[])": "15e6ffa6",
    "addSupportedChain(uint32)": "50964586",
    "addressResolver()": "05a2ee2a",
    "allContractsDeployed(uint32)": "4b40ee7c",
    "auctionHouse()": "ed9152c8",
    "chainInstances(uint32,uint256)": "cfc87855",
    "claimOwner()": "3bd1adec",
    "executeBatchDualDexTrades(uint32[],address[],address[],address[],address[],uint256[])": "1c49a049",
    "executeDualDexTrade(uint32,address,address,address,address,uint256)": "d6f14d10",
    "feesData()": "b682da3e",
    "getChainInstanceCount(uint32)": "467cba7b",
    "getFeesData()": "130db241",
    "isChainSupported(uint32)": "cbaa349e",
    "isReadCall()": "05c20c82",
    "isValidPromise(address)": "b690b962",
    "nominateOwner(address)": "5b94db27",
    "nominee()": "20f99c0a",
    "owner()": "8da5cb5b",
    "setFees((uint32,address,uint256))": "f08e37c0",
    "supportedChainSlugs(uint256)": "c691c96a",
    "watcherPrecompile()": "d1456ce5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressResolver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deployerContract_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"feePoolChain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"feePoolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFees\",\"type\":\"uint256\"}],\"internalType\":\"struct FeesData\",\"name\":\"feesData_\",\"type\":\"tuple\"},{\"internalType\":\"uint32[]\",\"name\":\"initialChainSlugs_\",\"type\":\"uint32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FeesDataNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPromise\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyNominee\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"chainSlug\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"instance\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"router2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ArbitrageExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"OwnerClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nominee\",\"type\":\"address\"}],\"name\":\"OwnerNominated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"chainSlug\",\"type\":\"uint32\"},{\"internalType\":\"address[]\",\"name\":\"instances\",\"type\":\"address[]\"}],\"name\":\"addChainInstances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"chainSlug\",\"type\":\"uint32\"}],\"name\":\"addSupportedChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressResolver\",\"outputs\":[{\"internalType\":\"contract IAddressResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"chainSlug_\",\"type\":\"uint32\"}],\"name\":\"allContractsDeployed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionHouse\",\"outputs\":[{\"internalType\":\"contract IAuctionHouse\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"chainInstances\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"chainSlugs\",\"type\":\"uint32[]\"},{\"internalType\":\"address[]\",\"name\":\"routers1\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"routers2\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens1\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokens2\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"executeBatchDualDexTrades\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"chainSlug\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"router1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"router2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"executeDualDexTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"feePoolChain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"feePoolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"chainSlug\",\"type\":\"uint32\"}],\"name\":\"getChainInstanceCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeesData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"feePoolChain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"feePoolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFees\",\"type\":\"uint256\"}],\"internalType\":\"struct FeesData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"chainSlug\",\"type\":\"uint32\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isReadCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isValidPromise\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nominee_\",\"type\":\"address\"}],\"name\":\"nominateOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nominee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"feePoolChain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"feePoolToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxFees\",\"type\":\"uint256\"}],\"internalType\":\"struct FeesData\",\"name\":\"feesData_\",\"type\":\"tuple\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedChainSlugs\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"watcherPrecompile\",\"outputs\":[{\"internalType\":\"contract IWatcherPrecompile\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addChainInstances(uint32,address[])\":{\"details\":\"Add instances for a specific chain\",\"params\":{\"chainSlug\":\"The chain identifier\",\"instances\":\"Array of DexAggregator addresses on that chain\"}},\"addSupportedChain(uint32)\":{\"details\":\"Add new supported chain\"},\"allContractsDeployed(uint32)\":{\"params\":{\"chainSlug_\":\"The chain slug\"}},\"auctionHouse()\":{\"details\":\"Resolves and returns the auction house contract for interaction\",\"returns\":{\"_0\":\"IAuctionHouse interface of the registered auction house\"}},\"claimOwner()\":{\"details\":\"Allows the nominated owner to claim ownership of the contract. Throws an error if the caller is not the nominee. Sets the nominated owner as the new owner of the contract. Emits an `OwnerClaimed` event with the address of the new owner.\"},\"executeBatchDualDexTrades(uint32[],address[],address[],address[],address[],uint256[])\":{\"details\":\"Execute batch arbitrage trades across multiple chains\"},\"executeDualDexTrade(uint32,address,address,address,address,uint256)\":{\"details\":\"Execute arbitrage trade using round-robin across instances\"},\"getChainInstanceCount(uint32)\":{\"details\":\"Get number of instances for a chain\"},\"getFeesData()\":{\"details\":\"Public view function accessible to any callerUsed by external contracts to verify fee parameters\",\"returns\":{\"_0\":\"Current fee configuration struct\"}},\"isChainSupported(uint32)\":{\"details\":\"Check if a chain is supported\"},\"nominateOwner(address)\":{\"details\":\"Allows the current owner to nominate a new owner for the contract. Throws an error if the caller is not the owner. Emits an `OwnerNominated` event with the address of the nominee.\"},\"nominee()\":{\"details\":\"Returns the current nominee for ownership of the contract.\"},\"owner()\":{\"details\":\"Returns the current owner of the contract.\"},\"setFees((uint32,address,uint256))\":{\"details\":\"Update fees configuration\"},\"watcherPrecompile()\":{\"details\":\"Resolves and returns the watcher precompile contract for interaction\",\"returns\":{\"_0\":\"IWatcherPrecompile interface of the registered watcher precompile\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addressResolver()\":{\"notice\":\"The address resolver contract reference\"},\"allContractsDeployed(uint32)\":{\"notice\":\"Callback in pd promise to be called after all contracts are deployed\"},\"auctionHouse()\":{\"notice\":\"Gets the auction house contract interface\"},\"feesData()\":{\"notice\":\"Storage for the current fee configuration\"},\"getFeesData()\":{\"notice\":\"Retrieves the current fee configuration\"},\"watcherPrecompile()\":{\"notice\":\"Gets the watcher precompile contract interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/DexAppGateway.sol\":\"DexAggregatorGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/socket-protocol/lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/socket-protocol/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/socket-protocol/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/socket-protocol/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/socket-protocol/lib/openzeppelin-contracts/\",\":socket-protocol/=lib/socket-protocol/\",\":solmate/=lib/socket-protocol/lib/solmate/src/\"]},\"sources\":{\"lib/socket-protocol/contracts/base/AppGatewayBase.sol\":{\"keccak256\":\"0x5ed978938ea0f85f3d37fb05bb7b261c1ee06b4f5720c843add3040dc89030a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf5365517c6b614e0c24e4ee556262240fbf848028dad20e2b067e378703e0d1\",\"dweb:/ipfs/QmSW1osXz4y8ARgyiEuEAzS1gZqHQX3uF2igBEfEHGNmwH\"]},\"lib/socket-protocol/contracts/common/Structs.sol\":{\"keccak256\":\"0x177a9068d60e91a6c18c1d49da346b65f736b59c85fea73109d3fc59e4075fa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc449bc47c696f99ebce452b78a7c6ea5c30a616b769beb3bc54a78a930b6ebd\",\"dweb:/ipfs/Qmb9MZEsCfkQskjrE6SJgrvdNNhJHKSaHaBmaLwQQEzSgp\"]},\"lib/socket-protocol/contracts/interfaces/IAddressResolver.sol\":{\"keccak256\":\"0xcc86d91a8bc9a61bdb336993be44e6797036f3fc8445606325949e1aec67ef9c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://da95e60de5b96f030172446b07971cc3469bbf22d3bce8ce3241a1cd14f089fb\",\"dweb:/ipfs/QmUVi8SbYFJvuhFqrAvhtj26t32pwK9GWXrJMJ88VTrAiE\"]},\"lib/socket-protocol/contracts/interfaces/IAppGateway.sol\":{\"keccak256\":\"0x6b8819887420adc7a7fb15392dadac0820a5d2efad080441e8d5e85119238e3b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://77b1ba92cc50ab98b22f8081a160f86584cccb73335d12cdfacfbd9adb50a1f5\",\"dweb:/ipfs/Qmedb2Zhs1Q2rb2rgi77oqUcNrdnNmbW5pGWKVv6Hiu7oL\"]},\"lib/socket-protocol/contracts/interfaces/IAuctionHouse.sol\":{\"keccak256\":\"0x3e8bef641bcd7a1478019ba95df99f53b2f220d48cd17eebc24118df1ddba4f9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ef94701b86a2dddfecbef010ac91c32b04f5bc6d90665c259e22526ad22b28ac\",\"dweb:/ipfs/QmfUHF55kqbFyQre16xbc8EZnH29qyxb4SQP3xWxcjY9hB\"]},\"lib/socket-protocol/contracts/interfaces/IPromise.sol\":{\"keccak256\":\"0x240678b453e3258e3286abd2a1640f0c36179bd46374966e23e7f7cd1ed92b7b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://0169acc7004271fa7be91f776e97bf9a79601448b4b3a0d8baac220fff4b5019\",\"dweb:/ipfs/QmPJx5RxFTSts6YDxkHLvAFANEznaRwynQW3hzbQ9wqw8m\"]},\"lib/socket-protocol/contracts/interfaces/IWatcherPrecompile.sol\":{\"keccak256\":\"0x470d3a19b4ac094ce9375cdb6af7a63492fd4c658f2995336b183b9b26719015\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://0787e0c3e7f48ac716f867c6a28e4df3f8f56c55a4476319f9eb387ca27c57a9\",\"dweb:/ipfs/QmWZgmuKLkZYMTwfmV9TvDYyTciEnUfyWEh5iZfFqpqAUq\"]},\"lib/socket-protocol/contracts/utils/AddressResolverUtil.sol\":{\"keccak256\":\"0xf97b312bc2512ca813d75beb58719b4cc3a36dd1e17b722bfa1b560750c390e2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://115b8e92e7e316ba9d64eaf7f9ba81a7dc868050860b370ee208079772bb2d65\",\"dweb:/ipfs/QmTK69TkJHJnChsZRBn5MGBTQSSFY4GorbnHnwHTsH4d2G\"]},\"lib/socket-protocol/contracts/utils/FeesPlugin.sol\":{\"keccak256\":\"0x242f7aa8189d47baf22b607e9352599e6abe12a7ed58b1a56bd78cab217091f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597a6c742031e51767725b08f59be93c08a35afa8620dd643c9eb0661c8db833\",\"dweb:/ipfs/QmcXWgZHfRexW1NK753Mx74k4NPc3SafZmcwUCr2X27MMh\"]},\"lib/socket-protocol/contracts/utils/Ownable.sol\":{\"keccak256\":\"0x2301e17aa48dc02077657d29da1b96054d1b4b4359909285f6bfe7913660d842\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://d7d6e37864215c50e73ec226f4f18f16856a89073111646fa4663e06387736f3\",\"dweb:/ipfs/QmSgqxk3mZV3mPtWzaTwsDYaLeqJVFtokrdf8kvG4ebMcE\"]},\"src/DexAggregator.sol\":{\"keccak256\":\"0x879203fdb6fff6c1ca9be7c16f5d799c1c97c6fae36bffaa32a1c0993b4866e8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c31117e90a41545e8da2b21c377f9e9d6f46f172b6376b3b3bc2a00e37cf628c\",\"dweb:/ipfs/QmU6ALsomLhP1uPcPgVYEmQiWRmdn2MLS8ySwaZKuXZhTW\"]},\"src/DexAppGateway.sol\":{\"keccak256\":\"0xc059475d1698df2649c9e12bf26303bd9e1d67601d45e7f23dc583ac4038fd76\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1901f3ca2c8583cc0167a9752beb5c9b4f02214d0cf672d5fe3f6c1586cd5cf8\",\"dweb:/ipfs/QmNrpc9FByaurXCnNCaCh7tZ9ohEVsMr8t7XQFK734bzos\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.25+commit.b61c2a91" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addressResolver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "deployerContract_",
              "type": "address"
            },
            {
              "internalType": "struct FeesData",
              "name": "feesData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "feePoolChain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "feePoolToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFees",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint32[]",
              "name": "initialChainSlugs_",
              "type": "uint32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        { "inputs": [], "type": "error", "name": "FeesDataNotSet" },
        { "inputs": [], "type": "error", "name": "InvalidPromise" },
        { "inputs": [], "type": "error", "name": "OnlyNominee" },
        { "inputs": [], "type": "error", "name": "OnlyOwner" },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "chainSlug",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "instance",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "router1",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "router2",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token1",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token2",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ArbitrageExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "claimer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "nominee",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerNominated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "chainSlug", "type": "uint32" },
            {
              "internalType": "address[]",
              "name": "instances",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addChainInstances"
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "chainSlug", "type": "uint32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSupportedChain"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "addressResolver",
          "outputs": [
            {
              "internalType": "contract IAddressResolver",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "chainSlug_", "type": "uint32" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allContractsDeployed"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "auctionHouse",
          "outputs": [
            {
              "internalType": "contract IAuctionHouse",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" },
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "chainInstances",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint32[]",
              "name": "chainSlugs",
              "type": "uint32[]"
            },
            {
              "internalType": "address[]",
              "name": "routers1",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "routers2",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "tokens1",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "tokens2",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeBatchDualDexTrades"
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "chainSlug", "type": "uint32" },
            { "internalType": "address", "name": "router1", "type": "address" },
            { "internalType": "address", "name": "router2", "type": "address" },
            { "internalType": "address", "name": "token1", "type": "address" },
            { "internalType": "address", "name": "token2", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeDualDexTrade"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feesData",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "feePoolChain",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "feePoolToken",
              "type": "address"
            },
            { "internalType": "uint256", "name": "maxFees", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "chainSlug", "type": "uint32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainInstanceCount",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getFeesData",
          "outputs": [
            {
              "internalType": "struct FeesData",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "feePoolChain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "feePoolToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFees",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint32", "name": "chainSlug", "type": "uint32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isChainSupported",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "isReadCall",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isValidPromise",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "nominee_", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "nominateOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nominee",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct FeesData",
              "name": "feesData_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "feePoolChain",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "feePoolToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFees",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFees"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportedChainSlugs",
          "outputs": [
            { "internalType": "uint32", "name": "", "type": "uint32" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "watcherPrecompile",
          "outputs": [
            {
              "internalType": "contract IWatcherPrecompile",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addChainInstances(uint32,address[])": {
            "details": "Add instances for a specific chain",
            "params": {
              "chainSlug": "The chain identifier",
              "instances": "Array of DexAggregator addresses on that chain"
            }
          },
          "addSupportedChain(uint32)": { "details": "Add new supported chain" },
          "allContractsDeployed(uint32)": {
            "params": { "chainSlug_": "The chain slug" }
          },
          "auctionHouse()": {
            "details": "Resolves and returns the auction house contract for interaction",
            "returns": {
              "_0": "IAuctionHouse interface of the registered auction house"
            }
          },
          "claimOwner()": {
            "details": "Allows the nominated owner to claim ownership of the contract. Throws an error if the caller is not the nominee. Sets the nominated owner as the new owner of the contract. Emits an `OwnerClaimed` event with the address of the new owner."
          },
          "executeBatchDualDexTrades(uint32[],address[],address[],address[],address[],uint256[])": {
            "details": "Execute batch arbitrage trades across multiple chains"
          },
          "executeDualDexTrade(uint32,address,address,address,address,uint256)": {
            "details": "Execute arbitrage trade using round-robin across instances"
          },
          "getChainInstanceCount(uint32)": {
            "details": "Get number of instances for a chain"
          },
          "getFeesData()": {
            "details": "Public view function accessible to any callerUsed by external contracts to verify fee parameters",
            "returns": { "_0": "Current fee configuration struct" }
          },
          "isChainSupported(uint32)": {
            "details": "Check if a chain is supported"
          },
          "nominateOwner(address)": {
            "details": "Allows the current owner to nominate a new owner for the contract. Throws an error if the caller is not the owner. Emits an `OwnerNominated` event with the address of the nominee."
          },
          "nominee()": {
            "details": "Returns the current nominee for ownership of the contract."
          },
          "owner()": {
            "details": "Returns the current owner of the contract."
          },
          "setFees((uint32,address,uint256))": {
            "details": "Update fees configuration"
          },
          "watcherPrecompile()": {
            "details": "Resolves and returns the watcher precompile contract for interaction",
            "returns": {
              "_0": "IWatcherPrecompile interface of the registered watcher precompile"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addressResolver()": {
            "notice": "The address resolver contract reference"
          },
          "allContractsDeployed(uint32)": {
            "notice": "Callback in pd promise to be called after all contracts are deployed"
          },
          "auctionHouse()": {
            "notice": "Gets the auction house contract interface"
          },
          "feesData()": {
            "notice": "Storage for the current fee configuration"
          },
          "getFeesData()": {
            "notice": "Retrieves the current fee configuration"
          },
          "watcherPrecompile()": {
            "notice": "Gets the watcher precompile contract interface"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/socket-protocol/lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/socket-protocol/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/socket-protocol/lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/socket-protocol/lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts/=lib/socket-protocol/lib/openzeppelin-contracts/",
        "socket-protocol/=lib/socket-protocol/",
        "solmate/=lib/socket-protocol/lib/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/DexAppGateway.sol": "DexAggregatorGateway" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/socket-protocol/contracts/base/AppGatewayBase.sol": {
        "keccak256": "0x5ed978938ea0f85f3d37fb05bb7b261c1ee06b4f5720c843add3040dc89030a8",
        "urls": [
          "bzz-raw://cf5365517c6b614e0c24e4ee556262240fbf848028dad20e2b067e378703e0d1",
          "dweb:/ipfs/QmSW1osXz4y8ARgyiEuEAzS1gZqHQX3uF2igBEfEHGNmwH"
        ],
        "license": "MIT"
      },
      "lib/socket-protocol/contracts/common/Structs.sol": {
        "keccak256": "0x177a9068d60e91a6c18c1d49da346b65f736b59c85fea73109d3fc59e4075fa4",
        "urls": [
          "bzz-raw://bc449bc47c696f99ebce452b78a7c6ea5c30a616b769beb3bc54a78a930b6ebd",
          "dweb:/ipfs/Qmb9MZEsCfkQskjrE6SJgrvdNNhJHKSaHaBmaLwQQEzSgp"
        ],
        "license": "MIT"
      },
      "lib/socket-protocol/contracts/interfaces/IAddressResolver.sol": {
        "keccak256": "0xcc86d91a8bc9a61bdb336993be44e6797036f3fc8445606325949e1aec67ef9c",
        "urls": [
          "bzz-raw://da95e60de5b96f030172446b07971cc3469bbf22d3bce8ce3241a1cd14f089fb",
          "dweb:/ipfs/QmUVi8SbYFJvuhFqrAvhtj26t32pwK9GWXrJMJ88VTrAiE"
        ],
        "license": "Unlicense"
      },
      "lib/socket-protocol/contracts/interfaces/IAppGateway.sol": {
        "keccak256": "0x6b8819887420adc7a7fb15392dadac0820a5d2efad080441e8d5e85119238e3b",
        "urls": [
          "bzz-raw://77b1ba92cc50ab98b22f8081a160f86584cccb73335d12cdfacfbd9adb50a1f5",
          "dweb:/ipfs/Qmedb2Zhs1Q2rb2rgi77oqUcNrdnNmbW5pGWKVv6Hiu7oL"
        ],
        "license": "Unlicense"
      },
      "lib/socket-protocol/contracts/interfaces/IAuctionHouse.sol": {
        "keccak256": "0x3e8bef641bcd7a1478019ba95df99f53b2f220d48cd17eebc24118df1ddba4f9",
        "urls": [
          "bzz-raw://ef94701b86a2dddfecbef010ac91c32b04f5bc6d90665c259e22526ad22b28ac",
          "dweb:/ipfs/QmfUHF55kqbFyQre16xbc8EZnH29qyxb4SQP3xWxcjY9hB"
        ],
        "license": "UNLICENSED"
      },
      "lib/socket-protocol/contracts/interfaces/IPromise.sol": {
        "keccak256": "0x240678b453e3258e3286abd2a1640f0c36179bd46374966e23e7f7cd1ed92b7b",
        "urls": [
          "bzz-raw://0169acc7004271fa7be91f776e97bf9a79601448b4b3a0d8baac220fff4b5019",
          "dweb:/ipfs/QmPJx5RxFTSts6YDxkHLvAFANEznaRwynQW3hzbQ9wqw8m"
        ],
        "license": "Unlicense"
      },
      "lib/socket-protocol/contracts/interfaces/IWatcherPrecompile.sol": {
        "keccak256": "0x470d3a19b4ac094ce9375cdb6af7a63492fd4c658f2995336b183b9b26719015",
        "urls": [
          "bzz-raw://0787e0c3e7f48ac716f867c6a28e4df3f8f56c55a4476319f9eb387ca27c57a9",
          "dweb:/ipfs/QmWZgmuKLkZYMTwfmV9TvDYyTciEnUfyWEh5iZfFqpqAUq"
        ],
        "license": "Unlicense"
      },
      "lib/socket-protocol/contracts/utils/AddressResolverUtil.sol": {
        "keccak256": "0xf97b312bc2512ca813d75beb58719b4cc3a36dd1e17b722bfa1b560750c390e2",
        "urls": [
          "bzz-raw://115b8e92e7e316ba9d64eaf7f9ba81a7dc868050860b370ee208079772bb2d65",
          "dweb:/ipfs/QmTK69TkJHJnChsZRBn5MGBTQSSFY4GorbnHnwHTsH4d2G"
        ],
        "license": "Unlicense"
      },
      "lib/socket-protocol/contracts/utils/FeesPlugin.sol": {
        "keccak256": "0x242f7aa8189d47baf22b607e9352599e6abe12a7ed58b1a56bd78cab217091f7",
        "urls": [
          "bzz-raw://597a6c742031e51767725b08f59be93c08a35afa8620dd643c9eb0661c8db833",
          "dweb:/ipfs/QmcXWgZHfRexW1NK753Mx74k4NPc3SafZmcwUCr2X27MMh"
        ],
        "license": "MIT"
      },
      "lib/socket-protocol/contracts/utils/Ownable.sol": {
        "keccak256": "0x2301e17aa48dc02077657d29da1b96054d1b4b4359909285f6bfe7913660d842",
        "urls": [
          "bzz-raw://d7d6e37864215c50e73ec226f4f18f16856a89073111646fa4663e06387736f3",
          "dweb:/ipfs/QmSgqxk3mZV3mPtWzaTwsDYaLeqJVFtokrdf8kvG4ebMcE"
        ],
        "license": "GPL-3.0-only"
      },
      "src/DexAggregator.sol": {
        "keccak256": "0x879203fdb6fff6c1ca9be7c16f5d799c1c97c6fae36bffaa32a1c0993b4866e8",
        "urls": [
          "bzz-raw://c31117e90a41545e8da2b21c377f9e9d6f46f172b6376b3b3bc2a00e37cf628c",
          "dweb:/ipfs/QmU6ALsomLhP1uPcPgVYEmQiWRmdn2MLS8ySwaZKuXZhTW"
        ],
        "license": "Unlicense"
      },
      "src/DexAppGateway.sol": {
        "keccak256": "0xc059475d1698df2649c9e12bf26303bd9e1d67601d45e7f23dc583ac4038fd76",
        "urls": [
          "bzz-raw://1901f3ca2c8583cc0167a9752beb5c9b4f02214d0cf672d5fe3f6c1586cd5cf8",
          "dweb:/ipfs/QmNrpc9FByaurXCnNCaCh7tZ9ohEVsMr8t7XQFK734bzos"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "id": 35
}
